{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI GPT Maker",
    "description": "Documentação completa da API do GPT Maker",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.gptmaker.ai"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v2/workspaces": {
      "get": {
        "description": "Lista os workspaces da conta",
        "responses": {
          "200": {
            "description": "Lista de workspaces",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workspace"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/workspace/{workspaceId}/credits": {
      "get": {
        "description": "Lista a quantidade de crédito disponível na conta.",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quantidade de crédito disponível",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credits"
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/workspace/{workspaceId}/agents": {
      "get": {
        "description": "Lista os agentes disponíveis nesse workspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro pelo nome do agente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de agentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Cria um novo agente no workspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do agente a ser criado",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAssistant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agente criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}": {
      "put": {
        "description": "Atualiza os detalhes de um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do agente a serem atualizados",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAssistant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agente atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/inactive": {
      "put": {
        "description": "Inativa um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agente inativado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/active": {
      "put": {
        "description": "Ativa um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agente ativado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/settings": {
      "get": {
        "description": "Obtém as configurações de um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configurações do agente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prefferModel": {
                      "type": "string",
                      "description": "Modelo de LLM preferido",
                      "enum": [
                        "GPT_3_5_TURBO",
                        "GPT_4_O",
                        "GPT_4",
                        "CLAUDE_HAIKU",
                        "CLAUDE_SONNET",
                        "CLAUDE_OPUS",
                        "CLAUDE_3_5_SONNET"
                      ]
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Timezone do agente"
                    },
                    "enabledHumanTransfer": {
                      "type": "boolean",
                      "description": "Define se o agente pode transferir para humano"
                    },
                    "enabledReminder": {
                      "type": "boolean",
                      "description": "Define se pode agendar lembretes"
                    },
                    "splitMessages": {
                      "type": "boolean",
                      "description": "Define se a mensagem será dividida em várias, caso seja muito grande"
                    },
                    "enabledEmoji": {
                      "type": "boolean",
                      "description": "Define se pode usar emojis nas respostas"
                    },
                    "limitSubjects": {
                      "type": "boolean",
                      "description": "Define se pode falar de outros assuntos ou apenas relacionado à empresa ou produto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Atualiza as configurações de um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Configurações do agente a serem atualizadas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prefferModel": {
                    "type": "string",
                    "description": "Modelo de LLM preferido",
                    "enum": [
                      "GPT_3_5_TURBO",
                      "GPT_4_O",
                      "GPT_4",
                      "CLAUDE_HAIKU",
                      "CLAUDE_SONNET",
                      "CLAUDE_OPUS",
                      "CLAUDE_3_5_SONNET"
                    ]
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Timezone do agente"
                  },
                  "enabledHumanTransfer": {
                    "type": "boolean",
                    "description": "Define se o agente pode transferir para humano"
                  },
                  "enabledReminder": {
                    "type": "boolean",
                    "description": "Define se pode agendar lembretes"
                  },
                  "splitMessages": {
                    "type": "boolean",
                    "description": "Define se a mensagem será dividida em várias, caso seja muito grande"
                  },
                  "enabledEmoji": {
                    "type": "boolean",
                    "description": "Define se pode usar emojis nas respostas"
                  },
                  "limitSubjects": {
                    "type": "boolean",
                    "description": "Define se pode falar de outros assuntos ou apenas relacionado à empresa ou produto"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Configurações atualizadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/trainings": {
      "get": {
        "description": "Lista os treinamentos do agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Tipo do treinamento a ser filtrado",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "TEXT",
                "WEBSITE",
                "VIDEO",
                "DOCUMENT"
              ]
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro para os treinamentos",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de treinamentos",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TextTraining"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebsiteTraining"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoTraining"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentTraining"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Adiciona um novo treinamento ao agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do treinamento a ser adicionado",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento deve ser TEXT",
                        "enum": [
                          "TEXT"
                        ]
                      },
                      "text": {
                        "type": "string",
                        "description": "Texto do treinamento"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL de uma imagem para o treinamento"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento deve ser WEBSITE",
                        "enum": [
                          "WEBSITE"
                        ]
                      },
                      "website": {
                        "type": "string",
                        "description": "Website do treinamento"
                      },
                      "trainingSubPages": {
                        "type": "string",
                        "description": "Treinamento em subpáginas",
                        "enum": [
                          "DISABLED",
                          "ACTIVE"
                        ]
                      },
                      "trainingInterval": {
                        "type": "string",
                        "description": "Intervalo de treinamento",
                        "enum": [
                          "THIRTY_SECONDS",
                          "NEVER",
                          "ONE_HOUR",
                          "FOUR_HOUR",
                          "EIGHT_HOUR",
                          "TWELVE_HOUR",
                          "ONE_DAY",
                          "ONE_WEEK",
                          "ONE_MONTH"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento deve ser VIDEO",
                        "enum": [
                          "VIDEO"
                        ]
                      },
                      "video": {
                        "type": "string",
                        "description": "URL Vídeo do treinamento"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento",
                        "enum": [
                          "DOCUMENT"
                        ]
                      },
                      "documentUrl": {
                        "type": "string",
                        "description": "URL do documento do treinamento"
                      },
                      "documentName": {
                        "type": "string",
                        "description": "Nome do documento do treinamento"
                      },
                      "documentMimetype": {
                        "type": "string",
                        "description": "Tipo MIME do documento do treinamento"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Treinamento adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/training/{trainingId}": {
      "put": {
        "description": "Atualiza um treinamento ao agente. Atualmente só é possível atualizar treinamentos de texto, para os demais treinamentos, é necessário remover e adicionar novamente.",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "description": "ID do treinamento",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do treinamento a ser adicionado",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento deve ser TEXT",
                        "enum": [
                          "TEXT"
                        ]
                      },
                      "text": {
                        "type": "string",
                        "description": "Texto atualizado do treinamento"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL de uma imagem para o treinamento"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Treinamento atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deleta um treinamento existente",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "description": "ID do treinamento",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Treinamento deletado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/intentions": {
      "get": {
        "description": "Lista as intenções do agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro pela descrição da intenção",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de intenções",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Intention"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Adiciona uma nova intenção ao agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados da intenção a ser adicionada",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Descrição da intenção"
                  },
                  "preprocessingMessage": {
                    "type": "string",
                    "description": "Mensagem de pré-processamento",
                    "enum": [
                      "DISABLED",
                      "GENERATE",
                      "MANUAL"
                    ]
                  },
                  "preprocessingText": {
                    "type": "string",
                    "description": "Texto de pré-processamento"
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Nome do campo"
                        },
                        "jsonName": {
                          "type": "string",
                          "description": "Nome JSON do campo"
                        },
                        "description": {
                          "type": "string",
                          "description": "Descrição do campo"
                        },
                        "type": {
                          "type": "string",
                          "description": "Tipo do campo",
                          "enum": [
                            "TEXT",
                            "URL",
                            "DATE_TIME",
                            "DATE",
                            "NUMBER",
                            "BOOLEAN"
                          ]
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Campo obrigatório"
                        }
                      },
                      "required": [
                        "name",
                        "jsonName",
                        "description",
                        "type",
                        "required"
                      ]
                    }
                  },
                  "type": {
                    "type": "string",
                    "description": "Tipo de intenção",
                    "enum": [
                      "WEBHOOK"
                    ]
                  },
                  "httpMethod": {
                    "type": "string",
                    "description": "Método HTTP",
                    "enum": [
                      "GET",
                      "POST"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "description": "URL do webhook"
                  },
                  "headers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Nome do cabeçalho"
                        },
                        "value": {
                          "type": "string",
                          "description": "Valor do cabeçalho"
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ]
                    }
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Nome do parâmetro"
                        },
                        "value": {
                          "type": "string",
                          "description": "Valor do parâmetro"
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ]
                    }
                  },
                  "requestBody": {
                    "type": "string",
                    "description": "String contendo um JSON que será enviado no corpo da requisição"
                  },
                  "autoGenerateParams": {
                    "type": "boolean",
                    "description": "Geração automática de parâmetros"
                  },
                  "autoGenerateBody": {
                    "type": "boolean",
                    "description": "Geração automática do corpo da requisição"
                  }
                },
                "required": [
                  "description",
                  "preprocessingMessage",
                  "preprocessingText",
                  "fields",
                  "type",
                  "httpMethod",
                  "url",
                  "headers",
                  "params",
                  "requestBody",
                  "autoGenerateParams",
                  "autoGenerateBody"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Intenção adicionada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/intention/{intentionId}": {
      "put": {
        "description": "Atualiza os dados de uma intenção",
        "parameters": [
          {
            "name": "intentionId",
            "in": "path",
            "description": "ID da intenção",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados da intenção a ser atualizada",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Intention"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Intenção atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deleta uma intenção existente",
        "parameters": [
          {
            "name": "intentionId",
            "in": "path",
            "description": "ID da intenção",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Intenção deletada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/workspace/{workspaceId}/chats": {
      "get": {
        "description": "Lista os chats do workspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agentId",
            "in": "query",
            "description": "ID do agente para filtrar os chats",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro para o nome do chat",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de chats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Chat"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}/messages": {
      "get": {
        "description": "Lista as mensagens de um chat",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de mensagens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}/start-human": {
      "put": {
        "description": "Marcar que um humano vai assumir o atendimento, IA para de responder o chat.",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Humano assumiu o atendimento com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}/stop-human": {
      "put": {
        "description": "Encerrar atendimento humano, isso fará que a proxima interação do cliente, o agente volte a responder.",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Atendimento encerrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}/send-message": {
      "post": {
        "description": "Envia uma nova mensagem para o chat",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do treinamento a ser adicionado",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Mensagem de texto a ser enviada"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Mensagem de descrição a ser enviada com a imagem"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL da imagem"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "audio": {
                        "type": "string",
                        "description": "URL do audio"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mensagem enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/conversation": {
      "post": {
        "description": "Permite conversar com o agente via API enviando texto, imagem ou áudio",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados para conversar com o agente",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "prompt": {
                        "type": "string",
                        "description": "Texto para o agente responder",
                        "example": "oi qual seu nome?"
                      }
                    },
                    "required": [
                      "contextId",
                      "prompt"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "prompt": {
                        "type": "string",
                        "description": "Texto para o agente responder",
                        "example": "oq vc ve nessa imagem?"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL da imagem",
                        "example": "https://example.com/image.png"
                      }
                    },
                    "required": [
                      "contextId",
                      "prompt",
                      "image"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "audio": {
                        "type": "string",
                        "description": "URL do áudio",
                        "example": "https://example.com/audio.mp3"
                      }
                    },
                    "required": [
                      "contextId",
                      "audio"
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resposta do agente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Resposta do agente"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "URLs das imagens respondidas pelo agente"
                      }
                    },
                    "audios": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "URLs dos áudios respondidos pelo agente"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/create-channel": {
      "post": {
        "description": "Cria um novo canal para o agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do canal a ser criado",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome do canal"
                  },
                  "type": {
                    "type": "string",
                    "description": "Tipo do canal",
                    "enum": [
                      "WHATSAPP",
                      "INSTAGRAM",
                      "CLOUD_API",
                      "TELEGRAM",
                      "WIDGET",
                      "MESSENGER",
                      "MERCADO_LIVRE"
                    ]
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Canal criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID do canal"
                    },
                    "name": {
                      "type": "string",
                      "description": "Nome do canal"
                    },
                    "type": {
                      "type": "string",
                      "description": "Tipo do canal",
                      "enum": [
                        "WHATSAPP",
                        "INSTAGRAM",
                        "CLOUD_API",
                        "TELEGRAM",
                        "WIDGET",
                        "MESSENGER",
                        "MERCADO_LIVRE"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/channel/{channelId}/widget-settings": {
      "put": {
        "description": "Atualiza as configurações do canal do tipo widget",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID do canal",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Configurações do widget a serem atualizadas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isPublic": {
                    "type": "boolean",
                    "description": "Define se o widget é público ou apenas permitido em alguns sites"
                  },
                  "initialMessage": {
                    "type": "string",
                    "description": "Mensagem inicial do widget"
                  },
                  "origins": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Lista de domínios autorizados"
                    }
                  },
                  "suggestMessages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Lista de sugestões de perguntas"
                    }
                  },
                  "headerBackground": {
                    "type": "string",
                    "description": "Cor do fundo do topo do widget"
                  },
                  "headerColor": {
                    "type": "string",
                    "description": "Cor da fonte do topo"
                  },
                  "messageUserBackground": {
                    "type": "string",
                    "description": "Cor de fundo da mensagem do usuário"
                  },
                  "buttonBackground": {
                    "type": "string",
                    "description": "Cor de fundo do botão flutuante"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Configurações do widget atualizadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/channel/{channelId}/widget-links": {
      "get": {
        "description": "Pega os links dos scripts do widget para injetar no site",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID do canal",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Links dos scripts do widget",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "float": {
                      "type": "string",
                      "description": "Link do botão flutuante"
                    },
                    "iframe": {
                      "type": "string",
                      "description": "Link do iframe para usar dentro de um iframe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/search": {
      "get": {
        "description": "Lista os canais de um agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro pelo nome do canal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de canais",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Nome do canal"
                          },
                          "type": {
                            "type": "string",
                            "description": "Tipo do canal",
                            "enum": [
                              "WHATSAPP",
                              "INSTAGRAM",
                              "CLOUD_API",
                              "TELEGRAM",
                              "WIDGET",
                              "MESSENGER",
                              "MERCADO_LIVRE"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "ID do canal"
                          },
                          "connected": {
                            "type": "boolean",
                            "description": "Indica se o canal está conectado"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Número total de canais"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Message": {
        "type": "object",
        "properties": {
          "userPicture": {
            "type": "string",
            "description": "Imagem do usuário",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "Nome do arquivo",
            "nullable": true
          },
          "role": {
            "type": "string",
            "description": "Função no chat"
          },
          "documentUrl": {
            "type": "string",
            "description": "URL do documento",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Tipo de mensagem"
          },
          "userName": {
            "type": "string",
            "description": "Nome do usuário",
            "nullable": true
          },
          "midiaContent": {
            "type": "string",
            "description": "Conteúdo de mídia",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "ID do usuário",
            "nullable": true
          },
          "audioUrl": {
            "type": "string",
            "description": "URL do áudio",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "URL da imagem",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "description": "Largura da imagem",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "ID da mensagem"
          },
          "text": {
            "type": "string",
            "description": "Texto da mensagem"
          },
          "time": {
            "type": "integer",
            "description": "Hora da mensagem"
          },
          "height": {
            "type": "integer",
            "description": "Altura da imagem",
            "nullable": true
          }
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "humanTalk": {
            "type": "boolean",
            "description": "Indica se o chat está no controle de um humano ou do agente."
          },
          "userPicture": {
            "type": "string",
            "description": "Imagem do usuário que assumiu o atendimento",
            "nullable": true
          },
          "messageUserName": {
            "type": "string",
            "description": "Nome do usuário que enviou a mensagem",
            "nullable": true
          },
          "read": {
            "type": "boolean",
            "description": "Indica se o chat está lido"
          },
          "role": {
            "type": "string",
            "description": "Função no chat"
          },
          "agentName": {
            "type": "string",
            "description": "Nome do agente"
          },
          "agentId": {
            "type": "string",
            "description": "ID do agente"
          },
          "whatsappPhone": {
            "type": "string",
            "description": "Número do WhatsApp"
          },
          "finished": {
            "type": "boolean",
            "description": "Indica se o chat está finalizado"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar do assistente"
          },
          "title": {
            "type": "string",
            "description": "Título do chat",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Tipo de chat"
          },
          "userName": {
            "type": "string",
            "description": "Nome do usuário",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "ID do usuário",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "description": "Imagem associada ao chat"
          },
          "conversationType": {
            "type": "string",
            "description": "Tipo de conversa"
          },
          "createdAt": {
            "type": "integer",
            "description": "Data de criação"
          },
          "name": {
            "type": "string",
            "description": "Nome do chat"
          },
          "recipient": {
            "type": "string",
            "description": "Destinatário do chat"
          },
          "id": {
            "type": "string",
            "description": "ID do chat"
          },
          "time": {
            "type": "integer",
            "description": "Hora do chat"
          },
          "unReadCount": {
            "type": "integer",
            "description": "Contagem de não lidos"
          },
          "conversation": {
            "type": "string",
            "description": "Conversa"
          }
        }
      },
      "Intention": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da intenção"
          },
          "description": {
            "type": "string",
            "description": "Descrição da intenção"
          },
          "preprocessingMessage": {
            "type": "string",
            "description": "Mensagem de pré-processamento",
            "enum": [
              "DISABLED",
              "GENERATE",
              "MANUAL"
            ]
          },
          "preprocessingText": {
            "type": "string",
            "description": "Texto de pré-processamento"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nome do campo"
                },
                "jsonName": {
                  "type": "string",
                  "description": "Nome JSON do campo"
                },
                "description": {
                  "type": "string",
                  "description": "Descrição do campo"
                },
                "type": {
                  "type": "string",
                  "description": "Tipo do campo",
                  "enum": [
                    "TEXT",
                    "URL",
                    "DATE_TIME",
                    "DATE",
                    "NUMBER",
                    "BOOLEAN"
                  ]
                },
                "required": {
                  "type": "boolean",
                  "description": "Campo obrigatório"
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Tipo de intenção",
            "enum": [
              "WEBHOOK"
            ]
          },
          "httpMethod": {
            "type": "string",
            "description": "Método HTTP",
            "enum": [
              "GET",
              "POST"
            ]
          },
          "url": {
            "type": "string",
            "description": "URL do webhook"
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nome do cabeçalho"
                },
                "value": {
                  "type": "string",
                  "description": "Valor do cabeçalho"
                }
              }
            }
          },
          "params": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nome do parâmetro"
                },
                "value": {
                  "type": "string",
                  "description": "Valor do parâmetro"
                }
              }
            }
          },
          "requestBody": {
            "type": "string",
            "description": "String contendo um JSON que será enviado no corpo da requisição"
          },
          "autoGenerateParams": {
            "type": "boolean",
            "description": "Geração automática de parâmetros"
          },
          "autoGenerateBody": {
            "type": "boolean",
            "description": "Geração automática do corpo da requisição"
          }
        }
      },
      "TextTraining": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do treinamento"
          },
          "type": {
            "type": "string",
            "description": "Tipo do treinamento",
            "enum": [
              "TEXT"
            ]
          },
          "text": {
            "type": "string",
            "description": "Texto do treinamento"
          },
          "image": {
            "type": "string",
            "description": "Imagem do treinamento"
          }
        }
      },
      "WebsiteTraining": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do treinamento"
          },
          "type": {
            "type": "string",
            "description": "Tipo do treinamento",
            "enum": [
              "WEBSITE"
            ]
          },
          "website": {
            "type": "string",
            "description": "Website do treinamento"
          },
          "trainingSubPages": {
            "type": "string",
            "description": "Treinamento em subpáginas",
            "enum": [
              "DISABLED",
              "ACTIVE"
            ]
          },
          "trainingInterval": {
            "type": "string",
            "description": "Intervalo de treinamento",
            "enum": [
              "THIRTY_SECONDS",
              "NEVER",
              "ONE_HOUR",
              "FOUR_HOUR",
              "EIGHT_HOUR",
              "TWELVE_HOUR",
              "ONE_DAY",
              "ONE_WEEK",
              "ONE_MONTH"
            ]
          }
        }
      },
      "VideoTraining": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do treinamento"
          },
          "type": {
            "type": "string",
            "description": "Tipo do treinamento",
            "enum": [
              "VIDEO"
            ]
          },
          "video": {
            "type": "string",
            "description": "Vídeo do treinamento"
          }
        }
      },
      "DocumentTraining": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do treinamento"
          },
          "type": {
            "type": "string",
            "description": "Tipo do treinamento",
            "enum": [
              "DOCUMENT"
            ]
          },
          "documentUrl": {
            "type": "string",
            "description": "URL do documento do treinamento"
          },
          "documentName": {
            "type": "string",
            "description": "Nome do documento do treinamento"
          },
          "documentMimetype": {
            "type": "string",
            "description": "Tipo MIME do documento do treinamento"
          }
        }
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do workspace"
          },
          "name": {
            "type": "string",
            "description": "Nome do workspace"
          }
        }
      },
      "Credits": {
        "type": "object",
        "properties": {
          "credits": {
            "type": "integer",
            "description": "Quantidade de crédito disponível no workspace"
          },
          "status": {
            "type": "string",
            "description": "Status da assinatura",
            "enum": [
              "TRIAL",
              "ACTIVE",
              "PAST_DUE",
              "CANCELED"
            ]
          }
        }
      },
      "Assistant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do agente"
          },
          "name": {
            "type": "string",
            "description": "Nome do agente"
          },
          "behavior": {
            "type": "string",
            "description": "Comportamento do agente"
          },
          "avatar": {
            "type": "string",
            "description": "URL de um avatar para o agente"
          },
          "communicationType": {
            "type": "string",
            "description": "Tipo de comunicação",
            "enum": [
              "FORMAL",
              "NORMAL",
              "RELAXED"
            ]
          },
          "type": {
            "type": "string",
            "description": "Objetivo do agente",
            "enum": [
              "SUPPORT",
              "SALE",
              "PERSONAL"
            ]
          },
          "jobName": {
            "type": "string",
            "description": "Nome da empresa ou produto que o agente vai trabalhar"
          },
          "jobSite": {
            "type": "string",
            "description": "Site da empresa"
          },
          "jobDescription": {
            "type": "string",
            "description": "Descrição sobre a empresa"
          }
        }
      },
      "NewAssistant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do agente"
          },
          "avatar": {
            "type": "string",
            "description": "URL de um avatar para o agente"
          },
          "behavior": {
            "type": "string",
            "description": "Comportamento do agente"
          },
          "communicationType": {
            "type": "string",
            "description": "Tipo de comunicação",
            "enum": [
              "FORMAL",
              "NORMAL",
              "RELAXED"
            ]
          },
          "type": {
            "type": "string",
            "description": "Objetivo do agente",
            "enum": [
              "SUPPORT",
              "SALE",
              "PERSONAL"
            ]
          },
          "jobName": {
            "type": "string",
            "description": "Nome da empresa ou produto que o agente vai trabalhar"
          },
          "jobSite": {
            "type": "string",
            "description": "Site da empresa"
          },
          "jobDescription": {
            "type": "string",
            "description": "Descrição sobre a empresa"
          }
        }
      },
      "Error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Error403": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}