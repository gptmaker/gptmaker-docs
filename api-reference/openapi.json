{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI GPT Maker",
    "description": "Documentação completa da API do GPT Maker",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.gptmaker.ai"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v2/workspaces": {
      "get": {
        "description": "Lista os workspaces da conta",
        "responses": {
          "200": {
            "description": "Lista de workspaces",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workspace"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/workspace/{workspaceId}/credits": {
      "get": {
        "description": "Lista a quantidade de crédito disponível na conta.",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quantidade de crédito disponível",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credits"
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/workspace/{workspaceId}/agents": {
      "get": {
        "description": "Lista os agentes disponíveis nesse workspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro pelo nome do agente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de agentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Cria um novo agente no workspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do agente a ser criado",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAssistant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agente criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}": {
      "put": {
        "description": "Atualiza os detalhes de um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do agente a serem atualizados",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAssistant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agente atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Busca dados do agente por ID",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do agente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remover agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agente removido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/inactive": {
      "put": {
        "description": "Inativa um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agente inativado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/active": {
      "put": {
        "description": "Ativa um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agente ativado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/settings": {
      "get": {
        "description": "Obtém as configurações de um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configurações do agente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prefferModel": {
                      "type": "string",
                      "description": "Modelo de LLM preferido",
                      "enum": [
                        "GPT_5",
                        "GPT_5_MINI",
                        "GPT_4_1",
                        "GPT_4_1_MINI",
                        "GPT_4_O_MINI",
                        "GPT_4_O",
                        "OPEN_AI_O3_MINI",
                        "OPEN_AI_O4_MINI",
                        "OPEN_AI_O3",
                        "OPEN_AI_O1",
                        "GPT_4",
                        "CLAUDE_3_5_SONNET",
                        "CLAUDE_3_7_SONNET",
                        "CLAUDE_3_5_HAIKU",
                        "DEEPINFRA_LLAMA3_3",
                        "QWEN_2_5_MAX",
                        "DEEPSEEK_CHAT",
                        "SABIA_3",
                        "SABIA_3_1"
                      ]
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Timezone do agente"
                    },
                    "enabledHumanTransfer": {
                      "type": "boolean",
                      "description": "Define se o agente pode transferir para humano"
                    },
                    "enabledReminder": {
                      "type": "boolean",
                      "description": "Define se pode agendar lembretes"
                    },
                    "splitMessages": {
                      "type": "boolean",
                      "description": "Define se a mensagem será dividida em várias, caso seja muito grande"
                    },
                    "enabledEmoji": {
                      "type": "boolean",
                      "description": "Define se pode usar emojis nas respostas"
                    },
                    "limitSubjects": {
                      "type": "boolean",
                      "description": "Define se pode falar de outros assuntos ou apenas relacionado à empresa ou produto"
                    },
                    "messageGroupingTime": {
                      "type": "string",
                      "description": "Modelo de LLM preferido",
                      "enum": [
                        "NO_GROUP",
                        "FIVE_SEC",
                        "TEN_SEC",
                        "THIRD_SEC",
                        "ONE_MINUTE"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Atualiza as configurações de um agente existente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Configurações do agente a serem atualizadas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prefferModel": {
                    "type": "string",
                    "description": "Modelo de LLM preferido",
                    "enum": [
                      "GPT_5",
                      "GPT_5_MINI",
                      "GPT_4_1",
                      "GPT_4_1_MINI",
                      "GPT_4_O_MINI",
                      "GPT_4_O",
                      "OPEN_AI_O3_MINI",
                      "OPEN_AI_O4_MINI",
                      "OPEN_AI_O3",
                      "OPEN_AI_O1",
                      "GPT_4",
                      "CLAUDE_3_5_SONNET",
                      "CLAUDE_3_7_SONNET",
                      "CLAUDE_3_5_HAIKU",
                      "DEEPINFRA_LLAMA3_3",
                      "QWEN_2_5_MAX",
                      "DEEPSEEK_CHAT",
                      "SABIA_3",
                      "SABIA_3_1"
                    ]
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Timezone do agente"
                  },
                  "enabledHumanTransfer": {
                    "type": "boolean",
                    "description": "Define se o agente pode transferir para humano"
                  },
                  "enabledReminder": {
                    "type": "boolean",
                    "description": "Define se pode agendar lembretes"
                  },
                  "splitMessages": {
                    "type": "boolean",
                    "description": "Define se a mensagem será dividida em várias, caso seja muito grande"
                  },
                  "enabledEmoji": {
                    "type": "boolean",
                    "description": "Define se pode usar emojis nas respostas"
                  },
                  "limitSubjects": {
                    "type": "boolean",
                    "description": "Define se pode falar de outros assuntos ou apenas relacionado à empresa ou produto"
                  },
                  "messageGroupingTime": {
                    "type": "string",
                    "description": "Modelo de LLM preferido",
                    "enum": [
                      "NO_GROUP",
                      "FIVE_SEC",
                      "TEN_SEC",
                      "THIRD_SEC",
                      "ONE_MINUTE"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Configurações atualizadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/webhooks": {
      "get": {
        "description": "Obtém os webhooks configurados em um agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "onNewMessage": {
                      "type": "string",
                      "description": "Webhook disparado automaticamente sempre que uma nova mensagem chega em um chat."
                    },
                    "onLackKnowLedge": {
                      "type": "string",
                      "description": "Webhook disparado quando o agente não sabe responder a uma pergunta."
                    },
                    "onTransfer": {
                      "type": "string",
                      "description": "Webhook disparado quando o agente transfere o atendimento para um humano."
                    },
                    "onFirstInteraction": {
                      "type": "string",
                      "description": "Webhook disparado automaticamente assim que o primeiro atendimento com o cliente é iniciado."
                    },
                    "onStartInteraction": {
                      "type": "string",
                      "description": "Webhook disparado automaticamente sempre que um atendimento com o cliente é iniciado."
                    },
                    "onFinishInteraction": {
                      "type": "string",
                      "description": "Webhook disparado automaticamente sempre que um atendimento é finalizado."
                    },
                    "onCreateEvent": {
                      "type": "string",
                      "description": "Webhook disparado automaticamente sempre que um agendamento é realizado."
                    },
                    "onCancelEvent": {
                      "type": "string",
                      "description": "Webhook disparado automaticamente sempre que um agendamento é cancelado."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Atualiza os webhooks de um agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Configurações do agente a serem atualizadas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "onNewMessage": {
                    "type": "string",
                    "description": "Webhook disparado automaticamente sempre que uma nova mensagem chega em um chat."
                  },
                  "onLackKnowLedge": {
                    "type": "string",
                    "description": "Webhook disparado quando o agente não sabe responder a uma pergunta."
                  },
                  "onTransfer": {
                    "type": "string",
                    "description": "Webhook disparado quando o agente transfere o atendimento para um humano."
                  },
                  "onFirstInteraction": {
                    "type": "string",
                    "description": "Webhook disparado automaticamente assim que o primeiro atendimento com o cliente é iniciado."
                  },
                  "onStartInteraction": {
                    "type": "string",
                    "description": "Webhook disparado automaticamente sempre que um atendimento com o cliente é iniciado."
                  },
                  "onFinishInteraction": {
                    "type": "string",
                    "description": "Webhook disparado automaticamente sempre que um atendimento é finalizado."
                  },
                  "onCreateEvent": {
                    "type": "string",
                    "description": "Webhook disparado automaticamente sempre que um agendamento é realizado."
                  },
                  "onCancelEvent": {
                    "type": "string",
                    "description": "Webhook disparado automaticamente sempre que um agendamento é cancelado."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Configurações atualizadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/trainings": {
      "get": {
        "description": "Lista os treinamentos do agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Tipo do treinamento a ser filtrado",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "TEXT",
                "WEBSITE",
                "VIDEO",
                "DOCUMENT"
              ]
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro para os treinamentos",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de treinamentos",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TextTraining"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebsiteTraining"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoTraining"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentTraining"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Adiciona um novo treinamento ao agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do treinamento a ser adicionado",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "Texto",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento deve ser TEXT",
                        "enum": [
                          "TEXT"
                        ]
                      },
                      "text": {
                        "type": "string",
                        "description": "Texto do treinamento"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL de uma imagem para o treinamento"
                      },
                      "callbackUrl": {
                        "type": "string",
                        "description": "URL do webhook para notificação quando o treinamento finaliza com sucesso ou erro (opcional)"
                      }
                    }
                  },
                  {
                    "title": "Website",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento deve ser WEBSITE",
                        "enum": [
                          "WEBSITE"
                        ]
                      },
                      "website": {
                        "type": "string",
                        "description": "Website do treinamento"
                      },
                      "trainingSubPages": {
                        "type": "string",
                        "description": "Treinamento em subpáginas",
                        "enum": [
                          "DISABLED",
                          "ACTIVE"
                        ]
                      },
                      "trainingInterval": {
                        "type": "string",
                        "description": "Intervalo de treinamento",
                        "enum": [
                          "THIRTY_SECONDS",
                          "NEVER",
                          "ONE_HOUR",
                          "FOUR_HOUR",
                          "EIGHT_HOUR",
                          "TWELVE_HOUR",
                          "ONE_DAY",
                          "ONE_WEEK",
                          "ONE_MONTH"
                        ]
                      },
                      "callbackUrl": {
                        "type": "string",
                        "description": "URL do webhook para notificação quando o treinamento finaliza com sucesso ou erro (opcional)"
                      }
                    }
                  },
                  {
                    "title": "Vídeo",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento deve ser VIDEO",
                        "enum": [
                          "VIDEO"
                        ]
                      },
                      "video": {
                        "type": "string",
                        "description": "URL Vídeo do treinamento"
                      },
                      "callbackUrl": {
                        "type": "string",
                        "description": "URL do webhook para notificação quando o treinamento finaliza com sucesso ou erro (opcional)"
                      }
                    }
                  },
                  {
                    "title": "Documento",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento",
                        "enum": [
                          "DOCUMENT"
                        ]
                      },
                      "documentUrl": {
                        "type": "string",
                        "description": "URL do documento do treinamento"
                      },
                      "documentName": {
                        "type": "string",
                        "description": "Nome do documento do treinamento"
                      },
                      "documentMimetype": {
                        "type": "string",
                        "description": "Tipo MIME do documento do treinamento"
                      },
                      "callbackUrl": {
                        "type": "string",
                        "description": "URL do webhook para notificação quando o treinamento finaliza com sucesso ou erro (opcional)"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Treinamento adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/training/{trainingId}": {
      "put": {
        "description": "Atualiza um treinamento ao agente. Atualmente só é possível atualizar treinamentos de texto, para os demais treinamentos, é necessário remover e adicionar novamente.",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "description": "ID do treinamento",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do treinamento a ser adicionado",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Tipo do treinamento deve ser TEXT",
                        "enum": [
                          "TEXT"
                        ]
                      },
                      "text": {
                        "type": "string",
                        "description": "Texto atualizado do treinamento"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL de uma imagem para o treinamento"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Treinamento atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deleta um treinamento existente",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "description": "ID do treinamento",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Treinamento deletado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{mcpId}/mcp/tools": {
      "get": {
        "description": "Lista as ferramentas de um MCP específico",
        "parameters": [
          {
            "name": "mcpId",
            "in": "path",
            "description": "ID do MCP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configurações listadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id da ferramenta"
                      },
                      "tenant": {
                        "type": "string",
                        "description": "Id/instância que está consumindo a API"
                      },
                      "tenantOwner": {
                        "type": "string",
                        "description": "Responsável pelo tenant"
                      },
                      "createdAt": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Data de criação"
                      },
                      "updatedAt": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Data de atualização"
                      },
                      "integrationId": {
                        "type": "string",
                        "description": "Id de integração"
                      },
                      "agentId": {
                        "type": "string",
                        "description": "Id do agente"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Status"
                      },
                      "name": {
                        "type": "string",
                        "description": "Nome da ferramenta"
                      },
                      "description": {
                        "type": "string",
                        "description": "Descrição da ferramenta"
                      },
                      "inputSchema": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "$schema": {
                            "type": "string"
                          },
                          "properties": {
                            "type": "object"
                          },
                          "additionalProperties": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{mcpId}/tool/{toolId}/mcp/active": {
      "get": {
        "description": "Ativa determinada ferramenta do MCP",
        "parameters": [
          {
            "name": "mcpId",
            "in": "path",
            "description": "ID do MCP",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toolId",
            "in": "path",
            "description": "ID da ferramenta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ferramenta ativada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{mcpId}/tool/{toolId}/mcp/inactive": {
      "get": {
        "description": "Inativa determinada ferramenta do MCP",
        "parameters": [
          {
            "name": "mcpId",
            "in": "path",
            "description": "ID do MCP",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toolId",
            "in": "path",
            "description": "ID da ferramenta",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ferramenta inativada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{mcpId}/mcp/sync-tools": {
      "get": {
        "description": "Sincroniza ferramentas do MCP",
        "parameters": [
          {
            "name": "mcpId",
            "in": "path",
            "description": "ID do MCP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ferramenta sincronizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/mcp/add": {
      "post": {
        "description": "Permite criar uma conexão MCP",
        "parameters": [
          {
            "name": "mcpId",
            "in": "path",
            "description": "ID do MCP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados para criação de uma integração MCP",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome da integração MCP",
                    "example": "Local MCP"
                  },
                  "description": {
                    "type": "string",
                    "description": "Descrição da integração",
                    "example": "Integração MCP sem OAuth"
                  },
                  "mcpUrl": {
                    "type": "string",
                    "description": "URL de conexão MCP",
                    "example": "https://observability.mcp.cloudflare.com/sse"
                  },
                  "urlType": {
                    "enum": [
                      "SSE",
                      "STREAMABLEHTTP"
                    ]
                  },
                  "authType": {
                    "enum": [
                      "OAUTH",
                      "HEADERS",
                      "NO_OAUTH"
                    ],
                    "description": "Tipo de autenticação utilizada"
                  },
                  "redirectUri": {
                    "type": "string",
                    "description": "URI de redirecionamento para autenticação",
                    "example": "http://localhost:3000/teste"
                  },
                  "headers": {
                    "type": "object",
                    "description": "Cabeçalhos adicionais para autenticação ou configuração"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "mcpUrl",
                  "urlType",
                  "authType"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Integração criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connected": {
                      "type": "boolean",
                      "description": "Indica se a integração já está conectada"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indica se a operação foi realizada com sucesso"
                    },
                    "id": {
                      "type": "string",
                      "description": "Identificador único da integração criada"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL de autorização para completar o fluxo OAuth"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/connect": {
      "post": {
        "description": "Permite conectar a uma conexão MCP caso for OAUTH",
        "requestBody": {
          "description": "Dados de retorno do fluxo OAuth para criação da integração MCP",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Código de autorização retornado pelo provedor OAuth",
                    "example": "3cf778033a85c96b236f88733342d614:hXK8aaN7dARJn0rn:ahvDhFFDCLnwPxbrnDUm24XSGY5tBvTi"
                  },
                  "state": {
                    "type": "string",
                    "description": "Valor único para validação do fluxo OAuth",
                    "example": "17b64ff8-f7be-49d6-a7f6-00da9592b216"
                  }
                },
                "required": [
                  "code",
                  "state"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Integração vinculada ao agente com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "string",
                      "description": "Identificador único do agente vinculado"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indica se a operação foi realizada com sucesso"
                    },
                    "mcpId": {
                      "type": "string",
                      "description": "Identificador único da integração MCP criada"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{mcpId}/mcp/delete": {
      "delete": {
        "description": "Deleta um MCP existente",
        "parameters": [
          {
            "name": "mcpId",
            "in": "path",
            "description": "ID do MCP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MCP deletado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/intentions": {
      "get": {
        "description": "Lista as intenções do agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro pela descrição da intenção",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de intenções",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Intention"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Adiciona uma nova intenção ao agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados da intenção a ser adicionada",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Descrição da intenção"
                  },
                  "preprocessingMessage": {
                    "type": "string",
                    "description": "Mensagem de pré-processamento",
                    "enum": [
                      "DISABLED",
                      "GENERATE",
                      "MANUAL"
                    ]
                  },
                  "preprocessingText": {
                    "type": "string",
                    "description": "Texto de pré-processamento"
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Nome do campo"
                        },
                        "jsonName": {
                          "type": "string",
                          "description": "Nome JSON do campo"
                        },
                        "description": {
                          "type": "string",
                          "description": "Descrição do campo"
                        },
                        "type": {
                          "type": "string",
                          "description": "Tipo do campo",
                          "enum": [
                            "TEXT",
                            "URL",
                            "DATE_TIME",
                            "DATE",
                            "NUMBER",
                            "BOOLEAN"
                          ]
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Campo obrigatório"
                        }
                      },
                      "required": [
                        "name",
                        "jsonName",
                        "description",
                        "type",
                        "required"
                      ]
                    }
                  },
                  "type": {
                    "type": "string",
                    "description": "Tipo de intenção",
                    "enum": [
                      "WEBHOOK"
                    ]
                  },
                  "httpMethod": {
                    "type": "string",
                    "description": "Método HTTP",
                    "enum": [
                      "GET",
                      "POST"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "description": "URL do webhook"
                  },
                  "headers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Nome do cabeçalho"
                        },
                        "value": {
                          "type": "string",
                          "description": "Valor do cabeçalho"
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ]
                    }
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Nome do parâmetro"
                        },
                        "value": {
                          "type": "string",
                          "description": "Valor do parâmetro"
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ]
                    }
                  },
                  "requestBody": {
                    "type": "string",
                    "description": "String contendo um JSON que será enviado no corpo da requisição"
                  },
                  "autoGenerateParams": {
                    "type": "boolean",
                    "description": "Geração automática de parâmetros"
                  },
                  "autoGenerateBody": {
                    "type": "boolean",
                    "description": "Geração automática do corpo da requisição"
                  }
                },
                "required": [
                  "description",
                  "preprocessingMessage",
                  "preprocessingText",
                  "fields",
                  "type",
                  "httpMethod",
                  "url",
                  "headers",
                  "params",
                  "requestBody",
                  "autoGenerateParams",
                  "autoGenerateBody"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Intenção adicionada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/intention/{intentionId}": {
      "put": {
        "description": "Atualiza os dados de uma intenção",
        "parameters": [
          {
            "name": "intentionId",
            "in": "path",
            "description": "ID da intenção",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados da intenção a ser atualizada",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Intention"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Intenção atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deleta uma intenção existente",
        "parameters": [
          {
            "name": "intentionId",
            "in": "path",
            "description": "ID da intenção",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Intenção deletada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/workspace/{workspaceId}/chats": {
      "get": {
        "description": "Lista os chats do workspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agentId",
            "in": "query",
            "description": "ID do agente para filtrar os chats",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro para o nome do chat",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de chats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Chat"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}": {
      "delete": {
        "description": "Deletar um chat",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat removido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}/messages": {
      "get": {
        "description": "Lista as mensagens de um chat",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de mensagens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Limpar mensagens",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mensagens removidas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}/start-human": {
      "put": {
        "description": "Marcar que um humano vai assumir o atendimento, IA para de responder o chat.",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Humano assumiu o atendimento com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}/stop-human": {
      "put": {
        "description": "Encerrar atendimento humano, isso fará que a proxima interação do cliente, o agente volte a responder.",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Atendimento encerrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/chat/{chatId}/send-message": {
      "post": {
        "description": "Envia uma nova mensagem para o chat",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "ID do chat",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do treinamento a ser adicionado",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Mensagem de texto a ser enviada"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Mensagem de descrição a ser enviada com a imagem"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL da imagem"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "audio": {
                        "type": "string",
                        "description": "URL do audio"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mensagem enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/conversation": {
      "post": {
        "description": "Permite conversar com o agente via API enviando texto, imagem ou áudio",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados para conversar com o agente",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "prompt": {
                        "type": "string",
                        "description": "Texto para o agente responder",
                        "example": "oi qual seu nome?"
                      },
                      "callbackUrl": {
                        "type": "string",
                        "description": "Caso seja informado, a chamada será assíncrona, quando o agente responder, ele vai chamar esse webhook com a resposta.",
                        "example": "https://webhook.site"
                      },
                      "chatName": {
                        "type": "string",
                        "description": "Você pode informar o nome do cliente caso já possua.",
                        "example": "Fulano"
                      },
                      "chatPicture": {
                        "type": "string",
                        "description": "Uma foto do cliente que será mostrada no chat de atendimento.",
                        "example": "https://foto.jpeg"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Número de whatsapp do cliente.",
                        "example": "55xxxxxxxx"
                      }
                    },
                    "required": [
                      "contextId",
                      "prompt"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "prompt": {
                        "type": "string",
                        "description": "Texto para o agente responder",
                        "example": "oq vc ve nessa imagem?"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL da imagem",
                        "example": "https://example.com/image.png"
                      },
                      "callbackUrl": {
                        "type": "string",
                        "description": "Caso seja informado, a chamada será assíncrona, quando o agente responder, ele vai chamar esse webhook com a resposta.",
                        "example": "https://webhook.site"
                      },
                      "chatName": {
                        "type": "string",
                        "description": "Você pode informar o nome do cliente caso já possua.",
                        "example": "Fulano"
                      },
                      "chatPicture": {
                        "type": "string",
                        "description": "Uma foto do cliente que será mostrada no chat de atendimento.",
                        "example": "https://foto.jpeg"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Número de whatsapp do cliente.",
                        "example": "55xxxxxxxx"
                      }
                    },
                    "required": [
                      "contextId",
                      "prompt",
                      "image"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "audio": {
                        "type": "string",
                        "description": "URL do áudio",
                        "example": "https://example.com/audio.mp3"
                      },
                      "callbackUrl": {
                        "type": "string",
                        "description": "Caso seja informado, a chamada será assíncrona, quando o agente responder, ele vai chamar esse webhook com a resposta.",
                        "example": "https://webhook.site"
                      },
                      "chatName": {
                        "type": "string",
                        "description": "Você pode informar o nome do cliente caso já possua.",
                        "example": "Fulano"
                      },
                      "chatPicture": {
                        "type": "string",
                        "description": "Uma foto do cliente que será mostrada no chat de atendimento.",
                        "example": "https://foto.jpeg"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Número de whatsapp do cliente.",
                        "example": "55xxxxxxxx"
                      }
                    },
                    "required": [
                      "contextId",
                      "audio"
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resposta do agente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Resposta do agente"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "URLs das imagens respondidas pelo agente"
                      }
                    },
                    "audios": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "URLs dos áudios respondidos pelo agente"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/add-message": {
      "post": {
        "description": "Permite adicionar uma mensagem ao contexto da conversa, muito usado para quando fizer um disparo ativo por outras ferramentas e precisa adicionar essa mensagem ao contexto da conversa.",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados para mensagem a ser adicionada",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "prompt": {
                        "type": "string",
                        "description": "Texto a ser salvo no contexto",
                        "example": "oi você tem interesse no produto x?"
                      },
                      "role": {
                        "type": "string",
                        "description": "define se é uma mensagem do usuário ou do agente, 'user' ou 'assistant' default: 'assistant'"
                      }
                    },
                    "required": [
                      "contextId",
                      "prompt"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "prompt": {
                        "type": "string",
                        "description": "Texto a ser salvo no contexto",
                        "example": "olha a foto desse produto x."
                      },
                      "image": {
                        "type": "string",
                        "description": "URL da imagem",
                        "example": "https://example.com/image.png"
                      },
                      "role": {
                        "type": "string",
                        "description": "define se é uma mensagem do usuário ou do agente, 'user' ou 'assistant' default: 'assistant'"
                      }
                    },
                    "required": [
                      "contextId",
                      "prompt",
                      "image"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "contextId": {
                        "type": "string",
                        "description": "ID externo para identificar o cliente",
                        "example": "12345"
                      },
                      "audio": {
                        "type": "string",
                        "description": "URL do áudio",
                        "example": "https://example.com/audio.mp3"
                      },
                      "role": {
                        "type": "string",
                        "description": "define se é uma mensagem do usuário ou do agente, 'user' ou 'assistant' default: 'assistant'"
                      }
                    },
                    "required": [
                      "contextId",
                      "audio"
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resposta do agente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Resposta do agente"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "URLs das imagens respondidas pelo agente"
                      }
                    },
                    "audios": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "URLs dos áudios respondidos pelo agente"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/create-channel": {
      "post": {
        "description": "Cria um novo canal para o agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do canal a ser criado",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome do canal"
                  },
                  "type": {
                    "type": "string",
                    "description": "Tipo do canal",
                    "enum": [
                      "WHATSAPP",
                      "INSTAGRAM",
                      "CLOUD_API",
                      "TELEGRAM",
                      "WIDGET",
                      "MESSENGER",
                      "MERCADO_LIVRE"
                    ]
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Canal criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID do canal"
                    },
                    "name": {
                      "type": "string",
                      "description": "Nome do canal"
                    },
                    "type": {
                      "type": "string",
                      "description": "Tipo do canal",
                      "enum": [
                        "WHATSAPP",
                        "INSTAGRAM",
                        "CLOUD_API",
                        "TELEGRAM",
                        "WIDGET",
                        "MESSENGER",
                        "MERCADO_LIVRE"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/channel/{channelId}/widget-settings": {
      "put": {
        "description": "Atualiza as configurações do canal do tipo widget",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID do canal",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Configurações do widget a serem atualizadas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isPublic": {
                    "type": "boolean",
                    "description": "Define se o widget é público ou apenas permitido em alguns sites"
                  },
                  "initialMessage": {
                    "type": "string",
                    "description": "Mensagem inicial do widget"
                  },
                  "origins": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Lista de domínios autorizados"
                    }
                  },
                  "suggestMessages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Lista de sugestões de perguntas"
                    }
                  },
                  "headerBackground": {
                    "type": "string",
                    "description": "Cor do fundo do topo do widget"
                  },
                  "headerColor": {
                    "type": "string",
                    "description": "Cor da fonte do topo"
                  },
                  "messageUserBackground": {
                    "type": "string",
                    "description": "Cor de fundo da mensagem do usuário"
                  },
                  "buttonBackground": {
                    "type": "string",
                    "description": "Cor de fundo do botão flutuante"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Configurações do widget atualizadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/channel/{channelId}/widget-links": {
      "get": {
        "description": "Pega os links dos scripts do widget para injetar no site",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID do canal",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Links dos scripts do widget",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "float": {
                      "type": "string",
                      "description": "Link do botão flutuante"
                    },
                    "iframe": {
                      "type": "string",
                      "description": "Link do iframe para usar dentro de um iframe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/search": {
      "get": {
        "description": "Lista os canais de um agente",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filtro pelo nome do canal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de canais",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Nome do canal"
                          },
                          "type": {
                            "type": "string",
                            "description": "Tipo do canal",
                            "enum": [
                              "WHATSAPP",
                              "INSTAGRAM",
                              "CLOUD_API",
                              "TELEGRAM",
                              "WIDGET",
                              "MESSENGER",
                              "MERCADO_LIVRE"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "ID do canal"
                          },
                          "connected": {
                            "type": "boolean",
                            "description": "Indica se o canal está conectado"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Número total de canais"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/agent/{agentId}/credits-spent": {
      "get": {
        "description": "Retorna o consumo de créditos por agente dentro de um período",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID do agente",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Ano para filtrar",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Mês para filtrar",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "day",
            "in": "query",
            "description": "Dia para filtrar",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Consumo de créditos por agente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total de créditos gastos"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "credits": {
                            "type": "integer",
                            "description": "Quantidade de créditos gastos"
                          },
                          "year": {
                            "type": "integer",
                            "description": "Ano"
                          },
                          "month": {
                            "type": "integer",
                            "description": "Mês"
                          },
                          "day": {
                            "type": "integer",
                            "description": "Dia"
                          },
                          "model": {
                            "type": "string",
                            "description": "Modelo de IA que consumiu os créditos"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/channel/{channelId}/start-conversation": {
      "post": {
        "description": "Iniciar conversa",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID do canal",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados da mensagem a ser disparada, atualmente iniciar a conversa só está disponível para canais do tipo Whatsapp não oficial.",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "Mensagem de Texto",
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string",
                        "description": "Número de telefone do destinatário"
                      },
                      "message": {
                        "type": "string",
                        "description": "Mensagem de texto a ser enviada"
                      }
                    },
                    "required": [
                      "phone",
                      "message"
                    ]
                  },
                  {
                    "title": "Imagem",
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string",
                        "description": "Número de telefone do destinatário"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL da imagem a ser enviada"
                      }
                    },
                    "required": [
                      "phone",
                      "image"
                    ]
                  },
                  {
                    "title": "Áudio",
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string",
                        "description": "Número de telefone do destinatário"
                      },
                      "audio": {
                        "type": "string",
                        "description": "URL do áudio a ser enviado"
                      }
                    },
                    "required": [
                      "phone",
                      "audio"
                    ]
                  },
                  {
                    "title": "Documento",
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string",
                        "description": "Número de telefone do destinatário"
                      },
                      "document": {
                        "type": "string",
                        "description": "URL do documento a ser enviado"
                      },
                      "documentName": {
                        "type": "string",
                        "description": "Nome do documento"
                      },
                      "documentMimetype": {
                        "type": "string",
                        "description": "Tipo MIME do documento"
                      }
                    },
                    "required": [
                      "phone",
                      "document",
                      "documentName",
                      "documentMimetype"
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mensagem enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/workspace/{workspaceId}/interactions": {
      "get": {
        "description": "Lista os atendimentos de um workspace, uma mesma conversa com seu cliente pode gerar vários atendimentos, pois o cliente pode retornar várias vezes, essa api lista todos os atendimentos, quando iniciou, quando finalizou, status etc..",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agentId",
            "in": "query",
            "description": "ID do agente para filtrar os atendimentos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de atendimentos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    },
    "/v2/interaction/{interactionId}/messages": {
      "get": {
        "description": "Lista as mensagens de um atendimento especifico, muitos clientes usam dessa API para gerar resumos ou fazer análises sobre o atendimento.",
        "parameters": [
          {
            "name": "interactionId",
            "in": "path",
            "description": "ID do workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de mensagens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro inesperado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Erro de token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Message": {
        "type": "object",
        "properties": {
          "userPicture": {
            "type": "string",
            "description": "Imagem do usuário",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "Nome do arquivo",
            "nullable": true
          },
          "role": {
            "type": "string",
            "description": "Função no chat"
          },
          "documentUrl": {
            "type": "string",
            "description": "URL do documento",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Tipo de mensagem"
          },
          "userName": {
            "type": "string",
            "description": "Nome do usuário",
            "nullable": true
          },
          "midiaContent": {
            "type": "string",
            "description": "Conteúdo de mídia",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "ID do usuário",
            "nullable": true
          },
          "audioUrl": {
            "type": "string",
            "description": "URL do áudio",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "URL da imagem",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "description": "Largura da imagem",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "ID da mensagem"
          },
          "text": {
            "type": "string",
            "description": "Texto da mensagem"
          },
          "time": {
            "type": "integer",
            "description": "Hora da mensagem"
          },
          "height": {
            "type": "integer",
            "description": "Altura da imagem",
            "nullable": true
          }
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "humanTalk": {
            "type": "boolean",
            "description": "Indica se o chat está no controle de um humano ou do agente."
          },
          "userPicture": {
            "type": "string",
            "description": "Imagem do usuário que assumiu o atendimento",
            "nullable": true
          },
          "messageUserName": {
            "type": "string",
            "description": "Nome do usuário que enviou a mensagem",
            "nullable": true
          },
          "read": {
            "type": "boolean",
            "description": "Indica se o chat está lido"
          },
          "role": {
            "type": "string",
            "description": "Função no chat"
          },
          "agentName": {
            "type": "string",
            "description": "Nome do agente"
          },
          "agentId": {
            "type": "string",
            "description": "ID do agente"
          },
          "whatsappPhone": {
            "type": "string",
            "description": "Número do WhatsApp"
          },
          "finished": {
            "type": "boolean",
            "description": "Indica se o chat está finalizado"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar do assistente"
          },
          "title": {
            "type": "string",
            "description": "Título do chat",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Tipo de chat"
          },
          "userName": {
            "type": "string",
            "description": "Nome do usuário",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "ID do usuário",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "description": "Imagem associada ao chat"
          },
          "conversationType": {
            "type": "string",
            "description": "Tipo de conversa"
          },
          "createdAt": {
            "type": "integer",
            "description": "Data de criação"
          },
          "name": {
            "type": "string",
            "description": "Nome do chat"
          },
          "recipient": {
            "type": "string",
            "description": "Destinatário do chat"
          },
          "id": {
            "type": "string",
            "description": "ID do chat"
          },
          "time": {
            "type": "integer",
            "description": "Hora do chat"
          },
          "unReadCount": {
            "type": "integer",
            "description": "Contagem de não lidos"
          },
          "conversation": {
            "type": "string",
            "description": "Conversa"
          }
        }
      },
      "Interaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id do atendimento."
          },
          "agentId": {
            "type": "string",
            "description": "Id do agente."
          },
          "agentName": {
            "type": "string",
            "description": "Nome do agente."
          },
          "agentAvatar": {
            "type": "string",
            "description": "Avatar do agente."
          },
          "chatId": {
            "type": "string",
            "description": "Id do chat/contextId."
          },
          "chatName": {
            "type": "string",
            "description": "Nome do chat."
          },
          "status": {
            "type": "string",
            "description": "Status do atendimento.",
            "enum": [
              "RUNNING",
              "WAITING",
              "RESOLVED"
            ]
          },
          "startAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora de início do atendimento."
          },
          "transferAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora da transferência foi feita para humano."
          },
          "resolvedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora do encerramento do atendimento."
          },
          "userId": {
            "type": "string",
            "description": "Id do membro que participou do atendimento."
          }
        }
      },
      "Intention": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da intenção"
          },
          "description": {
            "type": "string",
            "description": "Descrição da intenção"
          },
          "preprocessingMessage": {
            "type": "string",
            "description": "Mensagem de pré-processamento",
            "enum": [
              "DISABLED",
              "GENERATE",
              "MANUAL"
            ]
          },
          "preprocessingText": {
            "type": "string",
            "description": "Texto de pré-processamento"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nome do campo"
                },
                "jsonName": {
                  "type": "string",
                  "description": "Nome JSON do campo"
                },
                "description": {
                  "type": "string",
                  "description": "Descrição do campo"
                },
                "type": {
                  "type": "string",
                  "description": "Tipo do campo",
                  "enum": [
                    "TEXT",
                    "URL",
                    "DATE_TIME",
                    "DATE",
                    "NUMBER",
                    "BOOLEAN"
                  ]
                },
                "required": {
                  "type": "boolean",
                  "description": "Campo obrigatório"
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Tipo de intenção",
            "enum": [
              "WEBHOOK"
            ]
          },
          "httpMethod": {
            "type": "string",
            "description": "Método HTTP",
            "enum": [
              "GET",
              "POST"
            ]
          },
          "url": {
            "type": "string",
            "description": "URL do webhook"
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nome do cabeçalho"
                },
                "value": {
                  "type": "string",
                  "description": "Valor do cabeçalho"
                }
              }
            }
          },
          "params": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nome do parâmetro"
                },
                "value": {
                  "type": "string",
                  "description": "Valor do parâmetro"
                }
              }
            }
          },
          "requestBody": {
            "type": "string",
            "description": "String contendo um JSON que será enviado no corpo da requisição"
          },
          "autoGenerateParams": {
            "type": "boolean",
            "description": "Geração automática de parâmetros"
          },
          "autoGenerateBody": {
            "type": "boolean",
            "description": "Geração automática do corpo da requisição"
          }
        }
      },
      "TextTraining": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do treinamento"
          },
          "type": {
            "type": "string",
            "description": "Tipo do treinamento",
            "enum": [
              "TEXT"
            ]
          },
          "text": {
            "type": "string",
            "description": "Texto do treinamento"
          },
          "image": {
            "type": "string",
            "description": "Imagem do treinamento"
          }
        }
      },
      "WebsiteTraining": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do treinamento"
          },
          "type": {
            "type": "string",
            "description": "Tipo do treinamento",
            "enum": [
              "WEBSITE"
            ]
          },
          "website": {
            "type": "string",
            "description": "Website do treinamento"
          },
          "trainingSubPages": {
            "type": "string",
            "description": "Treinamento em subpáginas",
            "enum": [
              "DISABLED",
              "ACTIVE"
            ]
          },
          "trainingInterval": {
            "type": "string",
            "description": "Intervalo de treinamento",
            "enum": [
              "THIRTY_SECONDS",
              "NEVER",
              "ONE_HOUR",
              "FOUR_HOUR",
              "EIGHT_HOUR",
              "TWELVE_HOUR",
              "ONE_DAY",
              "ONE_WEEK",
              "ONE_MONTH"
            ]
          }
        }
      },
      "VideoTraining": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do treinamento"
          },
          "type": {
            "type": "string",
            "description": "Tipo do treinamento",
            "enum": [
              "VIDEO"
            ]
          },
          "video": {
            "type": "string",
            "description": "Vídeo do treinamento"
          }
        }
      },
      "DocumentTraining": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do treinamento"
          },
          "type": {
            "type": "string",
            "description": "Tipo do treinamento",
            "enum": [
              "DOCUMENT"
            ]
          },
          "documentUrl": {
            "type": "string",
            "description": "URL do documento do treinamento"
          },
          "documentName": {
            "type": "string",
            "description": "Nome do documento do treinamento"
          },
          "documentMimetype": {
            "type": "string",
            "description": "Tipo MIME do documento do treinamento"
          }
        }
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do workspace"
          },
          "name": {
            "type": "string",
            "description": "Nome do workspace"
          }
        }
      },
      "Credits": {
        "type": "object",
        "properties": {
          "credits": {
            "type": "integer",
            "description": "Quantidade de crédito disponível no workspace"
          },
          "status": {
            "type": "string",
            "description": "Status da assinatura",
            "enum": [
              "TRIAL",
              "ACTIVE",
              "PAST_DUE",
              "CANCELED"
            ]
          }
        }
      },
      "Assistant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do agente"
          },
          "name": {
            "type": "string",
            "description": "Nome do agente"
          },
          "behavior": {
            "type": "string",
            "description": "Comportamento do agente"
          },
          "avatar": {
            "type": "string",
            "description": "URL de um avatar para o agente"
          },
          "communicationType": {
            "type": "string",
            "description": "Tipo de comunicação",
            "enum": [
              "FORMAL",
              "NORMAL",
              "RELAXED"
            ]
          },
          "type": {
            "type": "string",
            "description": "Objetivo do agente",
            "enum": [
              "SUPPORT",
              "SALE",
              "PERSONAL"
            ]
          },
          "jobName": {
            "type": "string",
            "description": "Nome da empresa ou produto que o agente vai trabalhar"
          },
          "jobSite": {
            "type": "string",
            "description": "Site da empresa"
          },
          "jobDescription": {
            "type": "string",
            "description": "Descrição sobre a empresa"
          }
        }
      },
      "NewAssistant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do agente"
          },
          "avatar": {
            "type": "string",
            "description": "URL de um avatar para o agente"
          },
          "behavior": {
            "type": "string",
            "description": "Comportamento do agente"
          },
          "communicationType": {
            "type": "string",
            "description": "Tipo de comunicação",
            "enum": [
              "FORMAL",
              "NORMAL",
              "RELAXED"
            ]
          },
          "type": {
            "type": "string",
            "description": "Objetivo do agente",
            "enum": [
              "SUPPORT",
              "SALE",
              "PERSONAL"
            ]
          },
          "jobName": {
            "type": "string",
            "description": "Nome da empresa ou produto que o agente vai trabalhar"
          },
          "jobSite": {
            "type": "string",
            "description": "Site da empresa"
          },
          "jobDescription": {
            "type": "string",
            "description": "Descrição sobre a empresa"
          }
        }
      },
      "Error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Error403": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}